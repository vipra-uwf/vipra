
// Generated from Behavior.g4 by ANTLR 4.12.0


#include "BehaviorLexer.h"


using namespace antlr4;



using namespace antlr4;

namespace {

struct BehaviorLexerStaticData final {
  BehaviorLexerStaticData(std::vector<std::string> ruleNames,
                          std::vector<std::string> channelNames,
                          std::vector<std::string> modeNames,
                          std::vector<std::string> literalNames,
                          std::vector<std::string> symbolicNames)
      : ruleNames(std::move(ruleNames)), channelNames(std::move(channelNames)),
        modeNames(std::move(modeNames)), literalNames(std::move(literalNames)),
        symbolicNames(std::move(symbolicNames)),
        vocabulary(this->literalNames, this->symbolicNames) {}

  BehaviorLexerStaticData(const BehaviorLexerStaticData&) = delete;
  BehaviorLexerStaticData(BehaviorLexerStaticData&&) = delete;
  BehaviorLexerStaticData& operator=(const BehaviorLexerStaticData&) = delete;
  BehaviorLexerStaticData& operator=(BehaviorLexerStaticData&&) = delete;

  std::vector<antlr4::dfa::DFA> decisionToDFA;
  antlr4::atn::PredictionContextCache sharedContextCache;
  const std::vector<std::string> ruleNames;
  const std::vector<std::string> channelNames;
  const std::vector<std::string> modeNames;
  const std::vector<std::string> literalNames;
  const std::vector<std::string> symbolicNames;
  const antlr4::dfa::Vocabulary vocabulary;
  antlr4::atn::SerializedATNView serializedATN;
  std::unique_ptr<antlr4::atn::ATN> atn;
};

::antlr4::internal::OnceFlag behaviorlexerLexerOnceFlag;
BehaviorLexerStaticData *behaviorlexerLexerStaticData = nullptr;

void behaviorlexerLexerInitialize() {
  assert(behaviorlexerLexerStaticData == nullptr);
  auto staticData = std::make_unique<BehaviorLexerStaticData>(
    std::vector<std::string>{
      "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "COMMENT", 
      "LINE_COMMENT", "WS", "A", "B", "C", "D", "E", "F", "G", "H", "I", 
      "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", 
      "X", "Y", "Z", "COMMA", "COLON", "STATE", "ACTION", "PARAMETER", "EVNT", 
      "OBJECT", "AN", "AT", "AND", "ARE", "AFTER", "ALWAYS", "AROUND", "BEHIND", 
      "CONSIDER", "DECIMAL", "DIRECTION", "END", "ENDS", "ENVIRONMENT", 
      "EVENT", "EXACTLY", "EVERY", "EVERYONE", "FASTER", "FROM", "FRONT", 
      "GIVEN", "HAS", "IN", "INTEGER", "IS", "METERS", "NORMAL", "OBSTACLE", 
      "OCCUR", "OCCURRED", "OCCURRING", "OF", "OR", "PEDESTRIAN", "PEDESTRIANS", 
      "POSSIBLE", "RANDOM", "REQUIRED", "SECONDS", "SLOWER", "STATES", "STARTS", 
      "SPEED", "TO", "THE", "THAT", "THEN", "THEIR", "TYPES", "VALUE", "WHEN", 
      "WHILE", "WILL", "WITHIN", "ID", "NUMBER", "FLOAT", "LOC", "POINTX", 
      "POINTY"
    },
    std::vector<std::string>{
      "DEFAULT_TOKEN_CHANNEL", "HIDDEN"
    },
    std::vector<std::string>{
      "DEFAULT_MODE"
    },
    std::vector<std::string>{
      "", "'.'", "'+'", "'%'", "'@stop'", "'@walk'", "'x'", "'@push'", "'@be set to'", 
      "", "", "", "','", "':'"
    },
    std::vector<std::string>{
      "", "", "", "", "", "", "", "", "", "COMMENT", "LINE_COMMENT", "WS", 
      "COMMA", "COLON", "STATE", "ACTION", "PARAMETER", "EVNT", "OBJECT", 
      "AN", "AT", "AND", "ARE", "AFTER", "ALWAYS", "AROUND", "BEHIND", "CONSIDER", 
      "DECIMAL", "DIRECTION", "END", "ENDS", "ENVIRONMENT", "EVENT", "EXACTLY", 
      "EVERY", "EVERYONE", "FASTER", "FROM", "FRONT", "GIVEN", "HAS", "IN", 
      "INTEGER", "IS", "METERS", "NORMAL", "OBSTACLE", "OCCUR", "OCCURRED", 
      "OCCURRING", "OF", "OR", "PEDESTRIAN", "PEDESTRIANS", "POSSIBLE", 
      "RANDOM", "REQUIRED", "SECONDS", "SLOWER", "STATES", "STARTS", "SPEED", 
      "TO", "THE", "THAT", "THEN", "THEIR", "TYPES", "VALUE", "WHEN", "WHILE", 
      "WILL", "WITHIN", "ID", "NUMBER", "FLOAT", "LOC", "POINTX", "POINTY"
    }
  );
  static const int32_t serializedATNSegment[] = {
  	4,0,79,754,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
  	6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
  	7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
  	7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
  	7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
  	7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
  	7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
  	7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
  	7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
  	7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
  	7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,
  	7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,
  	7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,
  	7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,2,98,
  	7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,7,103,2,104,
  	7,104,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,
  	1,4,1,4,1,5,1,5,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,
  	7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,5,8,253,8,8,10,8,12,8,256,9,8,1,8,1,8,1,
  	8,1,8,1,8,1,9,1,9,1,9,1,9,5,9,267,8,9,10,9,12,9,270,9,9,1,9,1,9,1,10,
  	4,10,275,8,10,11,10,12,10,276,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,
  	1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,
  	1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,1,25,1,26,1,26,1,27,1,27,
  	1,28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,32,1,33,1,33,1,34,1,34,
  	1,35,1,35,1,36,1,36,1,37,1,37,1,38,1,38,1,39,1,39,4,39,339,8,39,11,39,
  	12,39,340,1,40,1,40,4,40,345,8,40,11,40,12,40,346,1,41,1,41,4,41,351,
  	8,41,11,41,12,41,352,1,42,1,42,4,42,357,8,42,11,42,12,42,358,1,43,1,43,
  	4,43,363,8,43,11,43,12,43,364,1,44,1,44,1,44,1,44,3,44,371,8,44,1,45,
  	1,45,1,45,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,
  	1,48,1,48,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,50,
  	1,50,1,50,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,
  	1,52,1,52,1,52,1,52,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,53,1,54,1,54,
  	1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,54,1,55,1,55,1,55,1,55,1,56,1,56,
  	1,56,1,56,1,56,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,1,57,
  	1,57,1,58,1,58,1,58,1,58,1,58,1,58,1,59,1,59,1,59,1,59,1,59,1,59,1,59,
  	1,59,1,60,1,60,1,60,1,60,1,60,1,60,1,61,1,61,1,61,1,61,1,61,1,61,1,61,
  	1,61,1,61,1,62,1,62,1,62,1,62,1,62,1,62,1,62,1,63,1,63,1,63,1,63,1,63,
  	1,64,1,64,1,64,1,64,1,64,1,64,1,65,1,65,1,65,1,65,1,65,1,65,1,66,1,66,
  	1,66,1,66,1,67,1,67,1,67,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,69,
  	1,69,1,69,1,70,1,70,1,70,1,70,1,70,1,70,1,70,1,71,1,71,1,71,1,71,1,71,
  	1,71,1,71,1,72,1,72,1,72,1,72,1,72,1,72,1,72,1,72,1,72,1,73,1,73,1,73,
  	1,73,1,73,1,73,1,74,1,74,1,74,1,74,1,74,1,74,1,74,1,74,1,74,1,75,1,75,
  	1,75,1,75,1,75,1,75,1,75,1,75,1,75,1,75,1,76,1,76,1,76,1,77,1,77,1,77,
  	1,78,1,78,1,78,1,78,1,78,1,78,1,78,1,78,1,78,1,78,1,78,1,79,1,79,1,79,
  	1,79,1,79,1,79,1,79,1,79,1,79,1,79,1,79,1,79,1,80,1,80,1,80,1,80,1,80,
  	1,80,1,80,1,80,1,80,1,81,1,81,1,81,1,81,1,81,1,81,1,81,1,82,1,82,1,82,
  	1,82,1,82,1,82,1,82,1,82,1,82,1,83,1,83,1,83,1,83,1,83,1,83,1,83,1,83,
  	1,84,1,84,1,84,1,84,1,84,1,84,1,84,1,85,1,85,1,85,1,85,1,85,1,85,1,85,
  	1,86,1,86,1,86,1,86,1,86,1,86,1,86,1,87,1,87,1,87,1,87,1,87,1,87,1,88,
  	1,88,1,88,1,89,1,89,1,89,1,89,1,90,1,90,1,90,1,90,1,90,1,91,1,91,1,91,
  	1,91,1,91,1,92,1,92,1,92,1,92,1,92,1,92,1,93,1,93,1,93,1,93,1,93,1,93,
  	1,94,1,94,1,94,1,94,1,94,1,94,1,95,1,95,1,95,1,95,1,95,1,96,1,96,1,96,
  	1,96,1,96,1,96,1,97,1,97,1,97,1,97,1,97,1,98,1,98,1,98,1,98,1,98,1,98,
  	1,98,1,99,4,99,726,8,99,11,99,12,99,727,1,100,4,100,731,8,100,11,100,
  	12,100,732,1,101,4,101,736,8,101,11,101,12,101,737,1,101,1,101,4,101,
  	742,8,101,11,101,12,101,743,1,102,4,102,747,8,102,11,102,12,102,748,1,
  	103,1,103,1,104,1,104,1,254,0,105,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,
  	17,9,19,10,21,11,23,0,25,0,27,0,29,0,31,0,33,0,35,0,37,0,39,0,41,0,43,
  	0,45,0,47,0,49,0,51,0,53,0,55,0,57,0,59,0,61,0,63,0,65,0,67,0,69,0,71,
  	0,73,0,75,12,77,13,79,14,81,15,83,16,85,17,87,18,89,19,91,20,93,21,95,
  	22,97,23,99,24,101,25,103,26,105,27,107,28,109,29,111,30,113,31,115,32,
  	117,33,119,34,121,35,123,36,125,37,127,38,129,39,131,40,133,41,135,42,
  	137,43,139,44,141,45,143,46,145,47,147,48,149,49,151,50,153,51,155,52,
  	157,53,159,54,161,55,163,56,165,57,167,58,169,59,171,60,173,61,175,62,
  	177,63,179,64,181,65,183,66,185,67,187,68,189,69,191,70,193,71,195,72,
  	197,73,199,74,201,75,203,76,205,77,207,78,209,79,1,0,31,2,0,10,10,13,
  	13,3,0,9,10,13,13,32,32,2,0,65,65,97,97,2,0,66,66,98,98,2,0,67,67,99,
  	99,2,0,68,68,100,100,2,0,69,69,101,101,2,0,70,70,102,102,2,0,71,71,103,
  	103,2,0,72,72,104,104,2,0,73,73,105,105,2,0,74,74,106,106,2,0,75,75,107,
  	107,2,0,76,76,108,108,2,0,77,77,109,109,2,0,78,78,110,110,2,0,79,79,111,
  	111,2,0,80,80,112,112,2,0,81,81,113,113,2,0,82,82,114,114,2,0,83,83,115,
  	115,2,0,84,84,116,116,2,0,85,85,117,117,2,0,86,86,118,118,2,0,87,87,119,
  	119,2,0,88,88,120,120,2,0,89,89,121,121,2,0,90,90,122,122,4,0,45,45,65,
  	90,95,95,97,122,1,0,48,57,5,0,45,45,47,47,65,90,95,95,97,122,741,0,1,
  	1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,
  	0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,75,
  	1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,
  	0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,
  	0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,
  	107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,
  	117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,
  	127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,
  	137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,
  	147,1,0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,
  	157,1,0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,163,1,0,0,0,0,165,1,0,0,0,0,
  	167,1,0,0,0,0,169,1,0,0,0,0,171,1,0,0,0,0,173,1,0,0,0,0,175,1,0,0,0,0,
  	177,1,0,0,0,0,179,1,0,0,0,0,181,1,0,0,0,0,183,1,0,0,0,0,185,1,0,0,0,0,
  	187,1,0,0,0,0,189,1,0,0,0,0,191,1,0,0,0,0,193,1,0,0,0,0,195,1,0,0,0,0,
  	197,1,0,0,0,0,199,1,0,0,0,0,201,1,0,0,0,0,203,1,0,0,0,0,205,1,0,0,0,0,
  	207,1,0,0,0,0,209,1,0,0,0,1,211,1,0,0,0,3,213,1,0,0,0,5,215,1,0,0,0,7,
  	217,1,0,0,0,9,223,1,0,0,0,11,229,1,0,0,0,13,231,1,0,0,0,15,237,1,0,0,
  	0,17,248,1,0,0,0,19,262,1,0,0,0,21,274,1,0,0,0,23,280,1,0,0,0,25,282,
  	1,0,0,0,27,284,1,0,0,0,29,286,1,0,0,0,31,288,1,0,0,0,33,290,1,0,0,0,35,
  	292,1,0,0,0,37,294,1,0,0,0,39,296,1,0,0,0,41,298,1,0,0,0,43,300,1,0,0,
  	0,45,302,1,0,0,0,47,304,1,0,0,0,49,306,1,0,0,0,51,308,1,0,0,0,53,310,
  	1,0,0,0,55,312,1,0,0,0,57,314,1,0,0,0,59,316,1,0,0,0,61,318,1,0,0,0,63,
  	320,1,0,0,0,65,322,1,0,0,0,67,324,1,0,0,0,69,326,1,0,0,0,71,328,1,0,0,
  	0,73,330,1,0,0,0,75,332,1,0,0,0,77,334,1,0,0,0,79,336,1,0,0,0,81,342,
  	1,0,0,0,83,348,1,0,0,0,85,354,1,0,0,0,87,360,1,0,0,0,89,370,1,0,0,0,91,
  	372,1,0,0,0,93,375,1,0,0,0,95,379,1,0,0,0,97,383,1,0,0,0,99,389,1,0,0,
  	0,101,396,1,0,0,0,103,403,1,0,0,0,105,410,1,0,0,0,107,419,1,0,0,0,109,
  	427,1,0,0,0,111,437,1,0,0,0,113,441,1,0,0,0,115,446,1,0,0,0,117,458,1,
  	0,0,0,119,464,1,0,0,0,121,472,1,0,0,0,123,478,1,0,0,0,125,487,1,0,0,0,
  	127,494,1,0,0,0,129,499,1,0,0,0,131,505,1,0,0,0,133,511,1,0,0,0,135,515,
  	1,0,0,0,137,518,1,0,0,0,139,526,1,0,0,0,141,529,1,0,0,0,143,536,1,0,0,
  	0,145,543,1,0,0,0,147,552,1,0,0,0,149,558,1,0,0,0,151,567,1,0,0,0,153,
  	577,1,0,0,0,155,580,1,0,0,0,157,583,1,0,0,0,159,594,1,0,0,0,161,606,1,
  	0,0,0,163,615,1,0,0,0,165,622,1,0,0,0,167,631,1,0,0,0,169,639,1,0,0,0,
  	171,646,1,0,0,0,173,653,1,0,0,0,175,660,1,0,0,0,177,666,1,0,0,0,179,669,
  	1,0,0,0,181,673,1,0,0,0,183,678,1,0,0,0,185,683,1,0,0,0,187,689,1,0,0,
  	0,189,695,1,0,0,0,191,701,1,0,0,0,193,706,1,0,0,0,195,712,1,0,0,0,197,
  	717,1,0,0,0,199,725,1,0,0,0,201,730,1,0,0,0,203,735,1,0,0,0,205,746,1,
  	0,0,0,207,750,1,0,0,0,209,752,1,0,0,0,211,212,5,46,0,0,212,2,1,0,0,0,
  	213,214,5,43,0,0,214,4,1,0,0,0,215,216,5,37,0,0,216,6,1,0,0,0,217,218,
  	5,64,0,0,218,219,5,115,0,0,219,220,5,116,0,0,220,221,5,111,0,0,221,222,
  	5,112,0,0,222,8,1,0,0,0,223,224,5,64,0,0,224,225,5,119,0,0,225,226,5,
  	97,0,0,226,227,5,108,0,0,227,228,5,107,0,0,228,10,1,0,0,0,229,230,5,120,
  	0,0,230,12,1,0,0,0,231,232,5,64,0,0,232,233,5,112,0,0,233,234,5,117,0,
  	0,234,235,5,115,0,0,235,236,5,104,0,0,236,14,1,0,0,0,237,238,5,64,0,0,
  	238,239,5,98,0,0,239,240,5,101,0,0,240,241,5,32,0,0,241,242,5,115,0,0,
  	242,243,5,101,0,0,243,244,5,116,0,0,244,245,5,32,0,0,245,246,5,116,0,
  	0,246,247,5,111,0,0,247,16,1,0,0,0,248,249,5,47,0,0,249,250,5,42,0,0,
  	250,254,1,0,0,0,251,253,9,0,0,0,252,251,1,0,0,0,253,256,1,0,0,0,254,255,
  	1,0,0,0,254,252,1,0,0,0,255,257,1,0,0,0,256,254,1,0,0,0,257,258,5,42,
  	0,0,258,259,5,47,0,0,259,260,1,0,0,0,260,261,6,8,0,0,261,18,1,0,0,0,262,
  	263,5,47,0,0,263,264,5,47,0,0,264,268,1,0,0,0,265,267,8,0,0,0,266,265,
  	1,0,0,0,267,270,1,0,0,0,268,266,1,0,0,0,268,269,1,0,0,0,269,271,1,0,0,
  	0,270,268,1,0,0,0,271,272,6,9,0,0,272,20,1,0,0,0,273,275,7,1,0,0,274,
  	273,1,0,0,0,275,276,1,0,0,0,276,274,1,0,0,0,276,277,1,0,0,0,277,278,1,
  	0,0,0,278,279,6,10,1,0,279,22,1,0,0,0,280,281,7,2,0,0,281,24,1,0,0,0,
  	282,283,7,3,0,0,283,26,1,0,0,0,284,285,7,4,0,0,285,28,1,0,0,0,286,287,
  	7,5,0,0,287,30,1,0,0,0,288,289,7,6,0,0,289,32,1,0,0,0,290,291,7,7,0,0,
  	291,34,1,0,0,0,292,293,7,8,0,0,293,36,1,0,0,0,294,295,7,9,0,0,295,38,
  	1,0,0,0,296,297,7,10,0,0,297,40,1,0,0,0,298,299,7,11,0,0,299,42,1,0,0,
  	0,300,301,7,12,0,0,301,44,1,0,0,0,302,303,7,13,0,0,303,46,1,0,0,0,304,
  	305,7,14,0,0,305,48,1,0,0,0,306,307,7,15,0,0,307,50,1,0,0,0,308,309,7,
  	16,0,0,309,52,1,0,0,0,310,311,7,17,0,0,311,54,1,0,0,0,312,313,7,18,0,
  	0,313,56,1,0,0,0,314,315,7,19,0,0,315,58,1,0,0,0,316,317,7,20,0,0,317,
  	60,1,0,0,0,318,319,7,21,0,0,319,62,1,0,0,0,320,321,7,22,0,0,321,64,1,
  	0,0,0,322,323,7,23,0,0,323,66,1,0,0,0,324,325,7,24,0,0,325,68,1,0,0,0,
  	326,327,7,25,0,0,327,70,1,0,0,0,328,329,7,26,0,0,329,72,1,0,0,0,330,331,
  	7,27,0,0,331,74,1,0,0,0,332,333,5,44,0,0,333,76,1,0,0,0,334,335,5,58,
  	0,0,335,78,1,0,0,0,336,338,5,35,0,0,337,339,7,28,0,0,338,337,1,0,0,0,
  	339,340,1,0,0,0,340,338,1,0,0,0,340,341,1,0,0,0,341,80,1,0,0,0,342,344,
  	5,64,0,0,343,345,7,28,0,0,344,343,1,0,0,0,345,346,1,0,0,0,346,344,1,0,
  	0,0,346,347,1,0,0,0,347,82,1,0,0,0,348,350,5,36,0,0,349,351,7,28,0,0,
  	350,349,1,0,0,0,351,352,1,0,0,0,352,350,1,0,0,0,352,353,1,0,0,0,353,84,
  	1,0,0,0,354,356,5,33,0,0,355,357,7,28,0,0,356,355,1,0,0,0,357,358,1,0,
  	0,0,358,356,1,0,0,0,358,359,1,0,0,0,359,86,1,0,0,0,360,362,5,43,0,0,361,
  	363,7,28,0,0,362,361,1,0,0,0,363,364,1,0,0,0,364,362,1,0,0,0,364,365,
  	1,0,0,0,365,88,1,0,0,0,366,371,3,23,11,0,367,368,3,23,11,0,368,369,3,
  	49,24,0,369,371,1,0,0,0,370,366,1,0,0,0,370,367,1,0,0,0,371,90,1,0,0,
  	0,372,373,3,23,11,0,373,374,3,61,30,0,374,92,1,0,0,0,375,376,3,23,11,
  	0,376,377,3,49,24,0,377,378,3,29,14,0,378,94,1,0,0,0,379,380,3,23,11,
  	0,380,381,3,57,28,0,381,382,3,31,15,0,382,96,1,0,0,0,383,384,3,23,11,
  	0,384,385,3,33,16,0,385,386,3,61,30,0,386,387,3,31,15,0,387,388,3,57,
  	28,0,388,98,1,0,0,0,389,390,3,23,11,0,390,391,3,45,22,0,391,392,3,67,
  	33,0,392,393,3,23,11,0,393,394,3,71,35,0,394,395,3,59,29,0,395,100,1,
  	0,0,0,396,397,3,23,11,0,397,398,3,57,28,0,398,399,3,51,25,0,399,400,3,
  	63,31,0,400,401,3,49,24,0,401,402,3,29,14,0,402,102,1,0,0,0,403,404,3,
  	25,12,0,404,405,3,31,15,0,405,406,3,37,18,0,406,407,3,39,19,0,407,408,
  	3,49,24,0,408,409,3,29,14,0,409,104,1,0,0,0,410,411,3,27,13,0,411,412,
  	3,51,25,0,412,413,3,49,24,0,413,414,3,59,29,0,414,415,3,39,19,0,415,416,
  	3,29,14,0,416,417,3,31,15,0,417,418,3,57,28,0,418,106,1,0,0,0,419,420,
  	3,29,14,0,420,421,3,31,15,0,421,422,3,27,13,0,422,423,3,39,19,0,423,424,
  	3,47,23,0,424,425,3,23,11,0,425,426,3,45,22,0,426,108,1,0,0,0,427,428,
  	3,29,14,0,428,429,3,39,19,0,429,430,3,57,28,0,430,431,3,31,15,0,431,432,
  	3,27,13,0,432,433,3,61,30,0,433,434,3,39,19,0,434,435,3,51,25,0,435,436,
  	3,49,24,0,436,110,1,0,0,0,437,438,3,31,15,0,438,439,3,49,24,0,439,440,
  	3,29,14,0,440,112,1,0,0,0,441,442,3,31,15,0,442,443,3,49,24,0,443,444,
  	3,29,14,0,444,445,3,59,29,0,445,114,1,0,0,0,446,447,3,31,15,0,447,448,
  	3,49,24,0,448,449,3,65,32,0,449,450,3,39,19,0,450,451,3,57,28,0,451,452,
  	3,51,25,0,452,453,3,49,24,0,453,454,3,47,23,0,454,455,3,31,15,0,455,456,
  	3,49,24,0,456,457,3,61,30,0,457,116,1,0,0,0,458,459,3,31,15,0,459,460,
  	3,65,32,0,460,461,3,31,15,0,461,462,3,49,24,0,462,463,3,61,30,0,463,118,
  	1,0,0,0,464,465,3,31,15,0,465,466,3,69,34,0,466,467,3,23,11,0,467,468,
  	3,27,13,0,468,469,3,61,30,0,469,470,3,45,22,0,470,471,3,71,35,0,471,120,
  	1,0,0,0,472,473,3,31,15,0,473,474,3,65,32,0,474,475,3,31,15,0,475,476,
  	3,57,28,0,476,477,3,71,35,0,477,122,1,0,0,0,478,479,3,31,15,0,479,480,
  	3,65,32,0,480,481,3,31,15,0,481,482,3,57,28,0,482,483,3,71,35,0,483,484,
  	3,51,25,0,484,485,3,49,24,0,485,486,3,31,15,0,486,124,1,0,0,0,487,488,
  	3,33,16,0,488,489,3,23,11,0,489,490,3,59,29,0,490,491,3,61,30,0,491,492,
  	3,31,15,0,492,493,3,57,28,0,493,126,1,0,0,0,494,495,3,33,16,0,495,496,
  	3,57,28,0,496,497,3,51,25,0,497,498,3,47,23,0,498,128,1,0,0,0,499,500,
  	3,33,16,0,500,501,3,57,28,0,501,502,3,51,25,0,502,503,3,49,24,0,503,504,
  	3,61,30,0,504,130,1,0,0,0,505,506,3,35,17,0,506,507,3,39,19,0,507,508,
  	3,65,32,0,508,509,3,31,15,0,509,510,3,49,24,0,510,132,1,0,0,0,511,512,
  	3,37,18,0,512,513,3,23,11,0,513,514,3,59,29,0,514,134,1,0,0,0,515,516,
  	3,39,19,0,516,517,3,49,24,0,517,136,1,0,0,0,518,519,3,39,19,0,519,520,
  	3,49,24,0,520,521,3,61,30,0,521,522,3,31,15,0,522,523,3,35,17,0,523,524,
  	3,31,15,0,524,525,3,57,28,0,525,138,1,0,0,0,526,527,3,39,19,0,527,528,
  	3,59,29,0,528,140,1,0,0,0,529,530,3,47,23,0,530,531,3,31,15,0,531,532,
  	3,61,30,0,532,533,3,31,15,0,533,534,3,57,28,0,534,535,3,59,29,0,535,142,
  	1,0,0,0,536,537,3,49,24,0,537,538,3,51,25,0,538,539,3,57,28,0,539,540,
  	3,47,23,0,540,541,3,23,11,0,541,542,3,45,22,0,542,144,1,0,0,0,543,544,
  	3,51,25,0,544,545,3,25,12,0,545,546,3,59,29,0,546,547,3,61,30,0,547,548,
  	3,23,11,0,548,549,3,27,13,0,549,550,3,45,22,0,550,551,3,31,15,0,551,146,
  	1,0,0,0,552,553,3,51,25,0,553,554,3,27,13,0,554,555,3,27,13,0,555,556,
  	3,63,31,0,556,557,3,57,28,0,557,148,1,0,0,0,558,559,3,51,25,0,559,560,
  	3,27,13,0,560,561,3,27,13,0,561,562,3,63,31,0,562,563,3,57,28,0,563,564,
  	3,57,28,0,564,565,3,31,15,0,565,566,3,29,14,0,566,150,1,0,0,0,567,568,
  	3,51,25,0,568,569,3,27,13,0,569,570,3,27,13,0,570,571,3,63,31,0,571,572,
  	3,57,28,0,572,573,3,57,28,0,573,574,3,39,19,0,574,575,3,49,24,0,575,576,
  	3,35,17,0,576,152,1,0,0,0,577,578,3,51,25,0,578,579,3,33,16,0,579,154,
  	1,0,0,0,580,581,3,51,25,0,581,582,3,57,28,0,582,156,1,0,0,0,583,584,3,
  	53,26,0,584,585,3,31,15,0,585,586,3,29,14,0,586,587,3,31,15,0,587,588,
  	3,59,29,0,588,589,3,61,30,0,589,590,3,57,28,0,590,591,3,39,19,0,591,592,
  	3,23,11,0,592,593,3,49,24,0,593,158,1,0,0,0,594,595,3,53,26,0,595,596,
  	3,31,15,0,596,597,3,29,14,0,597,598,3,31,15,0,598,599,3,59,29,0,599,600,
  	3,61,30,0,600,601,3,57,28,0,601,602,3,39,19,0,602,603,3,23,11,0,603,604,
  	3,49,24,0,604,605,3,59,29,0,605,160,1,0,0,0,606,607,3,53,26,0,607,608,
  	3,51,25,0,608,609,3,59,29,0,609,610,3,59,29,0,610,611,3,39,19,0,611,612,
  	3,25,12,0,612,613,3,45,22,0,613,614,3,31,15,0,614,162,1,0,0,0,615,616,
  	3,57,28,0,616,617,3,23,11,0,617,618,3,49,24,0,618,619,3,29,14,0,619,620,
  	3,51,25,0,620,621,3,47,23,0,621,164,1,0,0,0,622,623,3,57,28,0,623,624,
  	3,31,15,0,624,625,3,55,27,0,625,626,3,63,31,0,626,627,3,39,19,0,627,628,
  	3,57,28,0,628,629,3,31,15,0,629,630,3,29,14,0,630,166,1,0,0,0,631,632,
  	3,59,29,0,632,633,3,31,15,0,633,634,3,27,13,0,634,635,3,51,25,0,635,636,
  	3,49,24,0,636,637,3,29,14,0,637,638,3,59,29,0,638,168,1,0,0,0,639,640,
  	3,59,29,0,640,641,3,45,22,0,641,642,3,51,25,0,642,643,3,67,33,0,643,644,
  	3,31,15,0,644,645,3,57,28,0,645,170,1,0,0,0,646,647,3,59,29,0,647,648,
  	3,61,30,0,648,649,3,23,11,0,649,650,3,61,30,0,650,651,3,31,15,0,651,652,
  	3,59,29,0,652,172,1,0,0,0,653,654,3,59,29,0,654,655,3,61,30,0,655,656,
  	3,23,11,0,656,657,3,57,28,0,657,658,3,61,30,0,658,659,3,59,29,0,659,174,
  	1,0,0,0,660,661,3,59,29,0,661,662,3,53,26,0,662,663,3,31,15,0,663,664,
  	3,31,15,0,664,665,3,29,14,0,665,176,1,0,0,0,666,667,3,61,30,0,667,668,
  	3,51,25,0,668,178,1,0,0,0,669,670,3,61,30,0,670,671,3,37,18,0,671,672,
  	3,31,15,0,672,180,1,0,0,0,673,674,3,61,30,0,674,675,3,37,18,0,675,676,
  	3,23,11,0,676,677,3,61,30,0,677,182,1,0,0,0,678,679,3,61,30,0,679,680,
  	3,37,18,0,680,681,3,31,15,0,681,682,3,49,24,0,682,184,1,0,0,0,683,684,
  	3,61,30,0,684,685,3,37,18,0,685,686,3,31,15,0,686,687,3,39,19,0,687,688,
  	3,57,28,0,688,186,1,0,0,0,689,690,3,61,30,0,690,691,3,71,35,0,691,692,
  	3,53,26,0,692,693,3,31,15,0,693,694,3,59,29,0,694,188,1,0,0,0,695,696,
  	3,65,32,0,696,697,3,23,11,0,697,698,3,45,22,0,698,699,3,63,31,0,699,700,
  	3,31,15,0,700,190,1,0,0,0,701,702,3,67,33,0,702,703,3,37,18,0,703,704,
  	3,31,15,0,704,705,3,49,24,0,705,192,1,0,0,0,706,707,3,67,33,0,707,708,
  	3,37,18,0,708,709,3,39,19,0,709,710,3,45,22,0,710,711,3,31,15,0,711,194,
  	1,0,0,0,712,713,3,67,33,0,713,714,3,39,19,0,714,715,3,45,22,0,715,716,
  	3,45,22,0,716,196,1,0,0,0,717,718,3,67,33,0,718,719,3,39,19,0,719,720,
  	3,61,30,0,720,721,3,37,18,0,721,722,3,39,19,0,722,723,3,49,24,0,723,198,
  	1,0,0,0,724,726,7,28,0,0,725,724,1,0,0,0,726,727,1,0,0,0,727,725,1,0,
  	0,0,727,728,1,0,0,0,728,200,1,0,0,0,729,731,7,29,0,0,730,729,1,0,0,0,
  	731,732,1,0,0,0,732,730,1,0,0,0,732,733,1,0,0,0,733,202,1,0,0,0,734,736,
  	7,29,0,0,735,734,1,0,0,0,736,737,1,0,0,0,737,735,1,0,0,0,737,738,1,0,
  	0,0,738,739,1,0,0,0,739,741,5,46,0,0,740,742,7,29,0,0,741,740,1,0,0,0,
  	742,743,1,0,0,0,743,741,1,0,0,0,743,744,1,0,0,0,744,204,1,0,0,0,745,747,
  	7,30,0,0,746,745,1,0,0,0,747,748,1,0,0,0,748,746,1,0,0,0,748,749,1,0,
  	0,0,749,206,1,0,0,0,750,751,3,203,101,0,751,208,1,0,0,0,752,753,3,203,
  	101,0,753,210,1,0,0,0,15,0,254,268,276,340,346,352,358,364,370,727,732,
  	737,743,748,2,6,0,0,0,1,0
  };
  staticData->serializedATN = antlr4::atn::SerializedATNView(serializedATNSegment, sizeof(serializedATNSegment) / sizeof(serializedATNSegment[0]));

  antlr4::atn::ATNDeserializer deserializer;
  staticData->atn = deserializer.deserialize(staticData->serializedATN);

  const size_t count = staticData->atn->getNumberOfDecisions();
  staticData->decisionToDFA.reserve(count);
  for (size_t i = 0; i < count; i++) { 
    staticData->decisionToDFA.emplace_back(staticData->atn->getDecisionState(i), i);
  }
  behaviorlexerLexerStaticData = staticData.release();
}

}

BehaviorLexer::BehaviorLexer(CharStream *input) : Lexer(input) {
  BehaviorLexer::initialize();
  _interpreter = new atn::LexerATNSimulator(this, *behaviorlexerLexerStaticData->atn, behaviorlexerLexerStaticData->decisionToDFA, behaviorlexerLexerStaticData->sharedContextCache);
}

BehaviorLexer::~BehaviorLexer() {
  delete _interpreter;
}

std::string BehaviorLexer::getGrammarFileName() const {
  return "Behavior.g4";
}

const std::vector<std::string>& BehaviorLexer::getRuleNames() const {
  return behaviorlexerLexerStaticData->ruleNames;
}

const std::vector<std::string>& BehaviorLexer::getChannelNames() const {
  return behaviorlexerLexerStaticData->channelNames;
}

const std::vector<std::string>& BehaviorLexer::getModeNames() const {
  return behaviorlexerLexerStaticData->modeNames;
}

const dfa::Vocabulary& BehaviorLexer::getVocabulary() const {
  return behaviorlexerLexerStaticData->vocabulary;
}

antlr4::atn::SerializedATNView BehaviorLexer::getSerializedATN() const {
  return behaviorlexerLexerStaticData->serializedATN;
}

const atn::ATN& BehaviorLexer::getATN() const {
  return *behaviorlexerLexerStaticData->atn;
}




void BehaviorLexer::initialize() {
  ::antlr4::internal::call_once(behaviorlexerLexerOnceFlag, behaviorlexerLexerInitialize);
}
