#ifndef DSL_HUMAN_BEHAVIOR_HPP
#define DSL_HUMAN_BEHAVIOR_HPP

#include "generated/BehaviorsBaseVisitor.h"
#include "human_behavior.hpp"

class DSL_Exception : public std::runtime_error {
 public:
  DSL_Exception(const std::string& message) : std::runtime_error(message) {}
  static void Throw(const std::string& message) { throw DSL_Exception(message); }
};

/**
 * An implementation of a Human Behavior that reads in its behaviors from a
 * behavior file. It is also an implementation of a BehaviorsVisitor, which is
 * generated by ANTLR and reads in the data using a DSL.
 */
class DslHumanBehavior : public HumanBehavior, public BehaviorsBaseVisitor {
 public:
  explicit DslHumanBehavior(const std::string& fileName);
  explicit DslHumanBehavior(const std::string& fileName, unsigned int seed);

  ~DslHumanBehavior() override = default;

  antlrcpp::Any visitStateDeclaration(BehaviorsParser::StateDeclarationContext* ctx) override;
  antlrcpp::Any visitConsideration(BehaviorsParser::ConsiderationContext* ctx) override;
  antlrcpp::Any visitIdRatioSelector(BehaviorsParser::IdRatioSelectorContext* ctx) override;
  antlrcpp::Any visitNoGroupRandomIdSelector(BehaviorsParser::NoGroupRandomIdSelectorContext* ctx) override;
  antlrcpp::Any visitStateActionStopped(BehaviorsParser::StateActionStoppedContext* ctx) override;
  antlrcpp::Any visitEveryoneSelector(BehaviorsParser::EveryoneSelectorContext* ctx) override;

  antlrcpp::Any visitExactlyNRandomSelector(BehaviorsParser::ExactlyNRandomSelectorContext* ctx) override;

  antlrcpp::Any visitInitialStateDeclaration(BehaviorsParser::InitialStateDeclarationContext* ctx) override;
  antlrcpp::Any visitEnvironmentStateDeclaration(
      BehaviorsParser::EnvironmentStateDeclarationContext* ctx) override;
  antlrcpp::Any visitEnvironmentInitialStateDeclaration(
      BehaviorsParser::EnvironmentInitialStateDeclarationContext* ctx) override;
  antlrcpp::Any visitStateTransitionElapsedTime(
      BehaviorsParser::StateTransitionElapsedTimeContext* ctx) override;
  antlrcpp::Any visitStateTransitionEnvironmentState(
      BehaviorsParser::StateTransitionEnvironmentStateContext* ctx) override;
  antlrcpp::Any visitEnvironmentTransition(BehaviorsParser::EnvironmentTransitionContext* ctx) override;
  antlrcpp::Any visitStateActionWalkSpeed(BehaviorsParser::StateActionWalkSpeedContext* ctx) override;

 protected:
  unsigned int seed;

 private:
  std::string behavior;
};

#endif