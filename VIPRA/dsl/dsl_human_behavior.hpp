#ifndef DSL_HUMAN_BEHAVIOR_HPP
#define DSL_HUMAN_BEHAVIOR_HPP

#include "human_behavior.hpp"
#include "generated/BehaviorsBaseVisitor.h"

/**
 * An implementation of a Human Behavior that reads in its behaviors from a
 * behavior file. It is also an implementation of a BehaviorsVisitor, which is
 * generated by ANTLR and reads in the data using a DSL.
 */
class DslHumanBehavior : public HumanBehavior, public BehaviorsBaseVisitor
{
    public:
        explicit DslHumanBehavior(const std::string& fileName);
        explicit DslHumanBehavior(const std::string& fileName, unsigned int seed);

        ~DslHumanBehavior() override = default;

        antlrcpp::Any visitStateDeclaration(BehaviorsParser::StateDeclarationContext *ctx) override;
        antlrcpp::Any visitStateTransition(BehaviorsParser::StateTransitionContext *ctx) override;
        antlrcpp::Any visitConsideration(BehaviorsParser::ConsiderationContext *ctx) override;
        antlrcpp::Any visitIdRatioSelector(BehaviorsParser::IdRatioSelectorContext *ctx) override;
        antlrcpp::Any visitNoGroupRandomIdSelector(BehaviorsParser::NoGroupRandomIdSelectorContext *ctx) override;
        antlrcpp::Any visitStateActionStopped(BehaviorsParser::StateActionStoppedContext *ctx) override;
        antlrcpp::Any visitEveryoneSelector(BehaviorsParser::EveryoneSelectorContext *ctx) override;


    protected:
        unsigned int seed;

    private:
        std::string behavior;
};

#endif